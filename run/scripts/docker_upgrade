#!/usr/bin/env bash

# DO NOT EDIT THIS FILE. IT WILL BE OVERWRITTEN
# only edit it in the service template repository

set -e

# this imports all standard variables
# we override the default, will still use COMPOSE_OPTS if already set
DEFAULT_COMPOSE_OPTS=(-f docker-compose.yml)
. run/scripts/get_project_vars
echo "Running docker_upgrade $APP_NAME $0"

# has to run from within contact_manager/scripts/docker dir.
# cannot build form elsewhere..
cd run/docker


# build and then run setup db scripts
echo "Building all containers"
docker-compose ${COMPOSE_OPTS[@]} build
# we stop all previous containers, to have fresh builds
docker-compose stop

echo "Starting upgrade maintenance.."
docker-compose ${COMPOSE_OPTS[@]} run --rm app /wait_for_it.sh db:5432 -t 0 -- python manage.py migrate
set +e
# TODO: rather than disabling errors, should detect if setup_db command exists
docker-compose ${COMPOSE_OPTS[@]} run --rm app /wait_for_it.sh db:5432 -t 0 -- python manage.py setup_db
set -e
docker-compose ${COMPOSE_OPTS[@]} run --rm app /wait_for_it.sh db:5432 -t 0 -- python manage.py collectstatic --noinput
echo "Successfully built and upgraded docker containers. Ready to start $APP_NAME"
docker-compose ${COMPOSE_OPTS[@]} up -d

echo ""
docker-compose ps
echo ""
echo "Upgrade docker app complete"
echo "The services should show up above in the process list"
echo "Don't forget to check that things are working as well as any manual db upgrades needed"
